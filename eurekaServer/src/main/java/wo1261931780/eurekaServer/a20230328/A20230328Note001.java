package wo1261931780.eurekaServer.a20230328;

/**
 * Created by Intellij IDEA.
 * Project:st-springCloud
 * Package:wo1261931780.eurekaServer.a20230328
 *
 * @author liujiajun_junw
 * @Date 2023-03-14-57  星期三
 * @description
 */
public class A20230328Note001 {
	//分布式带来的好处是降低了项目的耦合度
	//分布式带来的坏处是增加了项目的复杂度
	//同时，以为做了服务的拆分，所以部署和后期维护的时候更加复杂
	//同时，因为做了拆分，为了保证高可用，也必须要做负载均衡和集群
	//因为是不同的服务，所以需要做服务之间的远程调用
	//这里就包括了跨机器和跨服务调用
	//========================================================
	public static final String SPLIT_LINE = "========================================================";
	//微服务对开发也提出了要求：
	//团队独立，技术独立，数据独立，部署独立
	//首先是服务之间单一职责
	//每个服务都是一个独立的应用，负责单一的业务逻辑
	//然后是服务自治
	//每个服务要独立的开发团队，独立的开发，独立的部署
	//数据独立就是，每个服务都有自己的数据库，不会出现一个服务的数据库被另一个服务修改的情况
	//这些要求，都是为了实现高内聚，低耦合
	//========================================================
	//一开始阿里开源dubbo的时候
	//核心功能就是远程调用和注册发现
	//zookeeper是做集群管理的，redis是做缓存的
	//后来springCloud出来了,就把这些功能都整合到一起了
	//然后形成了完成的服务治理体系
	//后来出现了spring getway,响应式编程，网关也得到了增强
	//hystrix做好了服务的保护，服务降级，服务熔断
	//========================================================
	//springCloudAlibaba在基础上,实现了一堆接口
	//然后实现了自己的配置中心,注册中心
	//我们使用springCloud,其实就是因为内部的springBoot整合了一堆开源组件
	//从而达到了开箱即用的效果
	
}
